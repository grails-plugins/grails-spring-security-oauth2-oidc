import java.time.Instant
import java.time.ZoneOffset
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://repo.grails.org/grails/restricted' }
        maven {
           url = 'https://repository.apache.org/content/groups/snapshots'
           content {
              includeVersionByRegex('org[.]apache[.](grails|groovy).*', '.*', '.*-SNAPSHOT')
           }
        }
    }
    dependencies {
        classpath platform("org.apache.grails:grails-bom:$grailsVersion")
        classpath 'org.apache.grails:grails-gradle-plugins'
    }
}
apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'org.apache.grails.gradle.grails-plugin'
apply plugin: 'org.apache.grails.gradle.grails-publish'

group = 'org.grails.plugins'

ext {
    buildInstant = java.util.Optional.ofNullable(System.getenv("SOURCE_DATE_EPOCH"))
            .filter(s -> !s.isEmpty())
            .map(Long::parseLong)
            .map(Instant::ofEpochSecond)
            .orElseGet(Instant::now) as Instant
    formattedBuildDate = DateTimeFormatter.ISO_INSTANT.format(buildInstant)
    buildDate = buildInstant.atZone(ZoneOffset.UTC) // for reproducible builds
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.grails.org/grails/restricted' }
    maven {
       url = 'https://repository.apache.org/content/groups/snapshots'
       content {
          includeVersionByRegex('org[.]apache[.](grails|groovy).*', '.*', '.*-SNAPSHOT')
       }
    }
}

dependencies {
    implementation platform("org.apache.grails:grails-bom:$grailsVersion")
    compileOnly 'org.springframework.boot:spring-boot-starter-logging'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
    compileOnly 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.apache.grails:grails-core'

    implementation 'org.apache.grails:grails-spring-security:7.0.0-M5'
    implementation 'org.apache.grails:grails-spring-security-oauth2:7.0.0-M5'
    implementation 'com.auth0:java-jwt:4.5.0'
    implementation 'com.auth0:jwks-rsa:0.23.0'
}

grailsPublish {
    githubSlug = 'grails-plugins/grails-spring-security-oauth2-oidc'
    license {
        name = 'Apache-2.0'
    }
    title = 'Grails Spring Security OAuth2 OIDC Provider Plugin'
    desc = 'This plugin provides the oauth2 OIDC provider for grails-spring-security-oauth2 plugin.'
    developers = [
            sbglasius: 'SÃ¸ren Berg Glasius',
    ]
}

compileJava.options.release = javaVersion.toInteger()
